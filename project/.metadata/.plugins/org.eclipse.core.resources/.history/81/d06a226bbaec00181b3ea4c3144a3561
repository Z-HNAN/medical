<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.hdu.zhn.medical.base.mapper.BillMapper">
  <resultMap id="BaseResultMap" type="cn.edu.hdu.zhn.medical.base.domain.Bill">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="bill_state" jdbcType="TINYINT" property="billState" />
    <result column="illness_type" jdbcType="TINYINT" property="illnessType" />
    <result column="hospital" jdbcType="VARCHAR" property="hospital" />
    <result column="in_hospital_date" jdbcType="DATE" property="inHospitalDate" />
    <result column="out_hospital_date" jdbcType="DATE" property="outHospitalDate" />
    <result column="apply_money" jdbcType="DECIMAL" property="applyMoney" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="bill_img" jdbcType="VARCHAR" property="billImg" />
    <result column="com_dept_id" jdbcType="BIGINT" property="comDeptId" />
    <result column="audit_date" jdbcType="DATE" property="auditDate" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="audit_money" jdbcType="DECIMAL" property="auditMoney" />
    <result column="apply_date" jdbcType="DATE" property="applyDate" />
    <!-- 内联映射查询applier -->
    <association columnPrefix="ap_" javaType="cn.edu.hdu.zhn.medical.base.domain.Logininfo" property="applier" >
    	<id column="id" property="id" />
    	<result column="username" property="username" />
    </association>
    <!-- 内联映射查询audit -->
    <association columnPrefix="au_" javaType="cn.edu.hdu.zhn.medical.base.domain.Logininfo" property="auditor" >
    	<id column="id" property="id" />
    	<result column="username" property="username" />
    </association>
    
    <!-- 使用额外SQL查询大病详情   积极加载 -->
    <collection property="seriousType" column="serious_type_id" 
    	ofType="cn.edu.hdu.zhn.medical.base.domain.SystemDictionaryItem" select="cn.edu.hdu.zhn.medical.base.mapper.SystemDictionaryItemMapper.selectByPrimaryKey"/>
  </resultMap>
  
  <resultMap id="PassMoneyResultMap" type="cn.edu.hdu.zhn.medical.base.domain.Bill">
  	<id column="id" jdbcType="BIGINT" property="id" />
  	<result column="audit_money" jdbcType="DECIMAL" property="auditMoney" />
  </resultMap>
  
  <insert id="insert" keyColumn="id" keyProperty="id"  useGeneratedKeys="true">
    insert into `bill` (bill_state, applier_id, illness_type, 
      serious_type_id, hospital, in_hospital_date, 
      out_hospital_date, apply_money, description, 
      bill_img, com_dept_id, auditor_id, 
      audit_date, note, audit_money, apply_date
      )
    values (#{billState,jdbcType=TINYINT}, #{applier.id,jdbcType=BIGINT}, #{illnessType,jdbcType=TINYINT}, 
      #{seriousType.id,jdbcType=BIGINT}, #{hospital,jdbcType=VARCHAR}, #{inHospitalDate,jdbcType=DATE}, 
      #{outHospitalDate,jdbcType=DATE}, #{applyMoney,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR}, 
      #{billImg,jdbcType=VARCHAR}, #{comDeptId,jdbcType=BIGINT}, #{auditor.id,jdbcType=BIGINT}, 
      #{auditDate,jdbcType=DATE}, #{note,jdbcType=VARCHAR}, #{auditMoney,jdbcType=DECIMAL},
      #{applyDate}
      )
  </insert>
  <update id="updateByPrimaryKey" >
    update `bill`
    set bill_state = #{billState,jdbcType=TINYINT},
      applier_id = #{applier.id,jdbcType=BIGINT},
      illness_type = #{illnessType,jdbcType=TINYINT},
      serious_type_id = #{seriousType.id,jdbcType=BIGINT},
      hospital = #{hospital,jdbcType=VARCHAR},
      in_hospital_date = #{inHospitalDate,jdbcType=DATE},
      out_hospital_date = #{outHospitalDate,jdbcType=DATE},
      apply_money = #{applyMoney,jdbcType=DECIMAL},
      description = #{description,jdbcType=VARCHAR},
      bill_img = #{billImg,jdbcType=VARCHAR},
      com_dept_id = #{comDeptId,jdbcType=BIGINT},
      auditor_id = #{auditor.id,jdbcType=BIGINT},
      audit_date = #{auditDate,jdbcType=DATE},
      note = #{note,jdbcType=VARCHAR},
      audit_money = #{auditMoney,jdbcType=DECIMAL},
      apply_date = #{applyDate}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="base_column">
  	b.id, b.bill_state, b.applier_id, b.illness_type, b.serious_type_id, b.hospital, b.in_hospital_date, 
    b.out_hospital_date, b.apply_money, b.description, b.bill_img, b.com_dept_id, b.auditor_id, b.audit_date, 
    b.note, b.audit_money, b.apply_date, ap.id as ap_id, ap.username as ap_username, au.id as au_id, au.username as au_username
  </sql>
  
  <sql id="base_where">
	<if test="beginDate != null">
		AND b.apply_date >= #{beginDate}
	</if>
	<if test="endDate != null">
		AND #{endDate} >= b.apply_date
	</if>
  </sql>
  
  <sql id="bill_history_where">
  	<where>
  		<if test="logininfoId != null">
  			AND b.applier_id = #{logininfoId}
  		</if>
  		<include refid="base_where"/>
  	</where>
  </sql>
  
  <sql id="bill_audit_where">
  	<where>
  		<if test="((depts != null) and (depts.size > 0))">
  			AND b.com_dept_id IN
			<foreach collection="depts" item="id" index="index" open="(" close=")" separator=",">
			  #{id}
			</foreach>
  		</if>
  		<if test="employeeId != null">
  			AND ap.id = #{employeeId}
  		</if>
  		<if test="billState > -1">
  			AND b.bill_state = #{billState}
  		</if>
  		<include refid="base_where"/>
  	</where>
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select <include refid="base_column"/>
    from `bill` b
    JOIN logininfo ap ON b.applier_id = ap.id
    LEFT JOIN logininfo au ON b.auditor_id = au.id
    where b.id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="listByEmpId" resultMap="BaseResultMap">
  	select <include refid="base_column"/>
  	from `bill` b
    JOIN logininfo ap ON b.applier_id = ap.id
    LEFT JOIN logininfo au ON b.auditor_id = au.id
    where b.applier_id = #{id}
  </select>
  
  <select id="queryForCount" resultType="int">
  	SELECT COUNT(b.id) FROM `bill` b
  	<include refid="bill_history_where"/>
  </select>
  
  <select id="queryList" resultMap="BaseResultMap">
  	select <include refid="base_column"/>
  	from `bill` b
    JOIN logininfo ap ON b.applier_id = ap.id
    LEFT JOIN logininfo au ON b.auditor_id = au.id
    <include refid="bill_history_where"/>
    LIMIT #{start},#{pageSize}
  </select>
  
  
  <!-- <select id="queryAuditList" resultMap="BaseResultMap">
  	select <include refid="base_column"/>
  	from `bill` b
  	JOIN com_dept d ON b.com_dept_id = d.id
  	JOIN com_dept c ON d.parent_com_dept_id = c.id
    JOIN logininfo ap ON b.applier_id = ap.id
    LEFT JOIN logininfo au ON b.auditor_id = au.id
    <include refid="bill_audit_where"/>
    LIMIT #{start},#{pageSize}
  </select> -->
  
  <select id="queryInComIdForCount" resultType="int">
  	SELECT COUNT(b.id) FROM `bill` b JOIN logininfo ap ON b.applier_id = ap.id
	<include refid="bill_audit_where"/>	 
  </select>
  
  <select id="queryInComIdAuditList" resultMap="BaseResultMap">
  	SELECT <include refid="base_column"/>
  	from `bill` b
    JOIN logininfo ap ON b.applier_id = ap.id
    LEFT JOIN logininfo au ON b.auditor_id = au.id
    <include refid="bill_audit_where"/>
    LIMIT #{start},#{pageSize}
  </select>
  
  <select id="getBillsMoneyByComIdAndBillState" resultType="BigDecimal">
  	SELECT SUM(b.audit_money)
  	from `bill` b
    <include refid="bill_audit_where"/>
  </select>
  
  <select id="listPassMoneyBillByDeptIdAndBillState" >
  </select>
  
</mapper>